<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="com.nnprivate.project" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
        </property>
        <property name="jpaProperties" ref="hibernateProperties" />
    </bean>

    <!-- Data source template for use in the connection pool. -->
    <bean id="applicationDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${project.jdbc.driverClass}" />
        <property name="url" value="${project.jdbc.url}" />
        <property name="username" value="${project.jdbc.username}" />
        <property name="password" value="${project.jdbc.password}" />
    </bean>

    <bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
    <tx:annotation-driven transaction-manager="txManager" mode="aspectj" />

    <!-- Connection pool as data source. -->
    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
        <!-- Refer to a separately created bean as a data source template to work around a quirk of Tomcat's class loader. -->
        <property name="dataSource" ref="applicationDataSource" />

        <property name="initialSize" value="10" />
        <property name="initSQL" value="SELECT 1" />
        <property name="minIdle" value="10" />
        <property name="maxIdle" value="100" />
        <property name="maxActive" value="100" />
        <property name="maxWait" value="30000" />
        <property name="jmxEnabled" value="true" />
        <property name="jdbcInterceptors"
            value="org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer" />
        <property name="removeAbandoned" value="true" />
        <property name="removeAbandonedTimeout" value="3600" />
        <property name="logAbandoned" value="true" />
        <property name="testOnBorrow" value="true" />
        <property name="useEquals" value="false" />
        <property name="fairQueue" value="false" />
        <property name="timeBetweenEvictionRunsMillis" value="30000" />
        <property name="minEvictableIdleTimeMillis" value="30000" />
        <property name="validationQuery" value="SELECT 1" />
        <property name="validationInterval" value="300000" />
    </bean>

    <util:properties id="hibernateProperties">
        <prop key="hibernate.dialect">${hibernate.dialect}</prop>
        <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
        <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
        <prop key="hibernate.format_sql">true</prop>
        <prop key="hibernate.use_sql_comments">true</prop>
        <prop key="hibernate.jdbc.use_get_generated_keys">true</prop>
        <prop key="hibernate.default_batch_fetch_size">16</prop>
        <prop key="hibernate.jdbc.fetch_size">16</prop>
        <prop key="hibernate.jdbc.batch_size">30</prop>
        <prop key="hibernate.order_inserts">true</prop>
        <prop key="hibernate.order_updates">true</prop>
        <prop key="hibernate.jdbc.batch_versioned_data">true</prop>

        <!-- Second level cache configuration -->
        <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
        <prop key="hibernate.cache.use_second_level_cache">true</prop>
        <prop key="net.sf.ehcache.configurationResourceName">META-INF/persistence-ehcache.xml</prop>
    </util:properties>

</beans>